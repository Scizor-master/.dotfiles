# Denite
[[plugins]]
repo = "Shougo/denite.nvim"
on_cmd = "Denite"
hook_source = "call hook#source#denite#config()"
hook_add = '''
nmap [denite] <Nop>
map <Leader>d [denite]

nmap <silent>[denite]b :<C-u>Denite buffer<CR>
nmap <silent>[denite]c :<C-u>Denite command<CR>
nmap <silent>[denite]h :<C-u>Denite help<CR>
nmap <silent>[denite]l :<C-u>Denite line<CR>
nmap <silent>[denite]r :<C-u>Denite register<CR>
nmap <silent>[denite]fr :<C-u>Denite file/rec -start-filter<CR>
'''
[plugins.ftplugin]
denite = '''
nnoremap <silent><buffer><expr> <CR>
      \ denite#do_map('do_action')
nnoremap <silent><buffer><expr> d
      \ denite#do_map('do_action', 'delete')
nnoremap <silent><buffer><expr> p
      \ denite#do_map('do_action', 'preview')
nnoremap <silent><buffer><expr> q
      \ denite#do_map('quit')
nnoremap <silent><buffer><expr> i
      \ denite#do_map('open_filter_buffer')
nnoremap <silent><buffer><expr> <Space>
      \ denite#do_map('toggle_select').'j'
'''

[[plugins]]
repo = "Shougo/defx.nvim"
hook_add = '''
nnoremap <silent><Leader>f
      \ :<C-u>Defx -listed -resume -buffer-name=tab`tabpagenr()`<CR>
'''
hook_source = 'call hook#source#defx#config()'
[plugins.ftplugin]
defx = '''
nnoremap <silent><buffer><expr> <CR>
      \ defx#do_action('open')
nnoremap <silent><buffer><expr> c
      \ defx#do_action('copy')
nnoremap <silent><buffer><expr> m
      \ defx#do_action('move')
nnoremap <silent><buffer><expr> p
      \ defx#do_action('paste')
nnoremap <silent><buffer><expr> l
      \ defx#do_action('open')
nnoremap <silent><buffer><expr> E
      \ defx#do_action('open', 'vsplit')
nnoremap <silent><buffer><expr> P
      \ defx#do_action('open', 'pedit')
nnoremap <silent><buffer><expr> o
      \ defx#do_action('open_or_close_tree')
nnoremap <silent><buffer><expr> O
      \ defx#do_action('open_tree_recursive')
nnoremap <silent><buffer><expr> K
      \ defx#do_action('new_directory')
nnoremap <silent><buffer><expr> N
      \ defx#do_action('new_file')
nnoremap <silent><buffer><expr> M
      \ defx#do_action('new_multiple_files')
nnoremap <silent><buffer><expr> C
      \ defx#do_action('toggle_columns', 'mark:indent:icon:filename:type:size:time')
nnoremap <silent><buffer><expr> S
      \ defx#do_action('toggle_sort', 'time')
nnoremap <silent><buffer><expr> d
      \ defx#do_action('remove')
nnoremap <silent><buffer><expr> r
      \ defx#do_action('rename')
nnoremap <silent><buffer><expr> !
      \ defx#do_action('execute_command')
nnoremap <silent><buffer><expr> x
      \ defx#do_action('execute_system')
nnoremap <silent><buffer><expr> yy
      \ defx#do_action('yank_path')
nnoremap <silent><buffer><expr> .
      \ defx#do_action('toggle_ignored_files')
nnoremap <silent><buffer><expr> ;
      \ defx#do_action('repeat')
nnoremap <silent><buffer><expr> h
      \ defx#do_action('cd', ['..'])
nnoremap <silent><buffer><expr> ~
      \ defx#do_action('cd')
nnoremap <silent><buffer><expr> q
      \ defx#do_action('quit')
nnoremap <silent><buffer><expr> <Space>
      \ defx#do_action('toggle_select') . 'j'
nnoremap <silent><buffer><expr> *
      \ defx#do_action('toggle_select_all')
nnoremap <silent><buffer><expr> j
      \ line('.') == line('$') ? 'gg' : 'j'
nnoremap <silent><buffer><expr> k
      \ line('.') == 1 ? 'G' : 'k'
nnoremap <silent><buffer><expr> <C-l>
      \ defx#do_action('redraw')
nnoremap <silent><buffer><expr> <C-g>
      \ defx#do_action('print')
nnoremap <silent><buffer><expr> cd
      \ defx#do_action('change_vim_cwd')
'''

# Deoplete
[[plugins]]
repo = "Shougo/deoplete.nvim"
depends = ["context_filetype.vim"]
on_event = "InsertEnter"
hook_source = "call hook#source#deoplete#config()"

[[plugins]]
repo = "zchee/deoplete-zsh"
depends = ["deoplete.nvim"]
on_ft = ["sh", "zsh"]

[[plugins]]
repo = "Shougo/neco-vim"
depends = ["deoplete.nvim"]
on_ft = ["vim"]

# Snippet handler
[[plugins]]
repo = "Shougo/neosnippet.vim"
depends = ["neosnippet-snippets", "context_filetype.vim"]
on_event = "InsertCharPre"
hook_source = """
call hook#source#neosnippet#config()

imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
"""

# Template handler
[[plugins]]
repo = "mattn/sonictemplate-vim"
on_cmd = "Template"


# Context filetype library
[[plugins]]
repo = "Shougo/context_filetype.vim"

[[plugins]]
repo = "osyo-manga/vim-precious"
depends = ["context_filetype.vim"]
on_ft = ["vue", "markdown", "toml", "help"]
hook_add = """
let g:precious_enable_switch_CursorHold = {"*": 0, "help": 1}
let g:precious_enable_switch_CursorMoved = {"*": 0, "help": 1}
autocmd GlobalAutoCmd InsertEnter * :PreciousSwitch
autocmd GlobalAutoCmd InsertLeave * :PreciousReset
"""

# Linter
[[plugins]]
repo = "w0rp/ale"
on_ft = [
  "c", "cpp", "objc", "objcpp",
  "python",
  "go",
  "dockerfile",
  "sh", "bash",
  "vim",
]
hook_source = "call hook#source#ale#config()"

[[plugins]]
repo = "rhysd/accelerated-jk"
on_map = {n = '<Plug>'}
hook_add = '''
nmap <silent>j <Plug>(accelerated_jk_gj)
nmap <silent>k <Plug>(accelerated_jk_gk)
'''

# Parenthesizeing
[[plugins]]
repo = "cohama/lexima.vim"
on_event = "InsertCharPre"

# Comment out
[[plugins]]
repo = "tyru/caw.vim"
on_map = ["<Plug>(caw:hatpos:toggle)"]
hook_add ='''
nmap <Leader>c <Plug>(caw:hatpos:toggle)
vmap <Leader>c <Plug>(caw:hatpos:toggle)
'''

# For languages
# Python
[[plugins]]
repo = "Vimjas/vim-python-pep8-indent"
on_ft = ["python"]

# TypeScript
[[plugins]]
repo = "leafgarland/typescript-vim"
on_ft = ["typescript"]

# Vue.js
[[plugins]]
repo = "posva/vim-vue"
on_ft = ["vue"]

# Toml
[[plugins]]
repo = "cespare/vim-toml"
on_ft = ["toml"]
